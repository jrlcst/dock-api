services:
  db:
    image: postgres:17-alpine
    container_name: dock-account-db
    environment:
      - POSTGRES_DB=dock
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dock"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        MAVEN_IMAGE: maven:3-eclipse-temurin-25-alpine
        RUNTIME_IMAGE: eclipse-temurin:25-jre-alpine
        TARGETENV: dev
    container_name: dock-account-api
    environment:
      - QUARKUS_HTTP_ROOT_PATH=/api/
      - QUARKUS_HTTP_PORT=8080
      - QUARKUS_DATASOURCE_USERNAME=postgres
      - QUARKUS_DATASOURCE_PASSWORD=postgres
      - QUARKUS_DATASOURCE_DB_KIND=postgresql
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://db:5432/dock
      - QUARKUS_HIBERNATE_ORM_DATABASE_DEFAULT_SCHEMA=dock
      - QUARKUS_FLYWAY_ENABLED=true
      - QUARKUS_FLYWAY_MIGRATE_AT_START=true
      - QUARKUS_FLYWAY_LOCATIONS=db/migrations
      - QUARKUS_FLYWAY_SCHEMAS=dock
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
